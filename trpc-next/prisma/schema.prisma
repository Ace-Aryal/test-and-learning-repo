// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                      String           @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  avatarUrl               String?
  userId                  String?          @db.ObjectId
  partnerId               String           @db.ObjectId
  sentPartnerRequests     partnerRequest[] @relation("RequestSent")
  receivedPartnerRequests partnerRequest[] @relation("RequestReceived")
  SentNotes               Note[]           @relation("SentNote")
  ReceivedNotes           Note[]           @relation("ReceivedNote")
}

model Note {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  message    String
  viewed     Boolean @default(false)
  sender     User    @relation("SentNote", fields: [senderId], references: [id])
  senderId   String  @db.ObjectId
  receiver   User    @relation("ReceivedNote", fields: [receiverId], references: [id])
  receiverId String  @db.ObjectId
}

model partnerRequest {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  from       User   @relation("RequestSent", fields: [fromUserId], references: [id])
  fromUserId String @db.ObjectId
  to         User   @relation("RequestReceived", fields: [toUserId], references: [id])
  toUserId   String @db.ObjectId
}
